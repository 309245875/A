#!/bin/bash
# Author: Aniverse
#
# 2018.12.22
# 1.0.4
#
# bash -c "$(wget -qO- https://github.com/Aniverse/A/raw/i/dd)"
# bash <(wget -qO- https://github.com/Aniverse/A/raw/i/dd) 16

black=$(tput setaf 0); red=$(tput setaf 1); green=$(tput setaf 2); yellow=$(tput setaf 3);
blue=$(tput setaf 4); magenta=$(tput setaf 5); cyan=$(tput setaf 6); white=$(tput setaf 7);
on_red=$(tput setab 1); on_green=$(tput setab 2); on_yellow=$(tput setab 3); on_blue=$(tput setab 4);
on_magenta=$(tput setab 5); on_cyan=$(tput setab 6); on_white=$(tput setab 7); bold=$(tput bold);
dim=$(tput dim); underline=$(tput smul); reset_underline=$(tput rmul); standout=$(tput smso);
reset_standout=$(tput rmso); normal=$(tput sgr0); alert=${white}${on_red}; title=${standout};
baihuangse=${white}${on_yellow}; bailanse=${white}${on_blue}; bailvse=${white}${on_green};
baiqingse=${white}${on_cyan}; baihongse=${white}${on_red}; baizise=${white}${on_magenta};
heibaise=${black}${on_white}; heihuangse=${on_yellow}${black}

dd_size=$1
[[ -z $dd_size ]] && dd_size=16
echo "$dd_size" | grep -q "\." && { echo -e "\n${bold}不支持非整数！${normal}\n" ; exit 1 ; }
ddsize=$(echo "$dd_size" | grep -oE "[1-9][0-9]+")

starttime=$(date +%s)

next() { printf "%-70s\n" "-" | sed 's/\s/-/g' | tee -a $log ; }

cancel() {
	echo ""
	next;
	echo -e "\n${bold}终止循环 dd 脚本 ...${normal}\n"
	rm -f testfile dd_result
	exit
}

trap cancel SIGINT

time_cal() {

  if [[ $timeused -lt 60 ]]; then
sec=$timeused
time=$(echo $sec 秒)

elif [[ $timeused -gt 60 && $timeused -lt 3600 ]]; then
min=$(expr $timeused / 60)
sec=$(expr $timeused % 60) 
time=$(echo $min 分钟，$sec 秒)

elif [[ $timeused -ge 3600 && $timeused -lt 86400 ]]; then
hour=$(expr $timeused / 3600)
min=$(expr $(expr $timeused % 3600) / 60)
sec=$(expr $timeused % 60)
time=$(echo $hour 小时，$min 分钟，$sec 秒)

elif [[ $timeused -ge 86400 ]]; then
day=$(expr $timeused / 86400)
hour=$(expr $(expr $timeused % 86400) / 3600)
min=$(expr $(expr $timeused % 3600) / 60)
sec=$(expr $timeused % 60)
time=$(echo $day 天，$hour 小时，$min 分钟，$sec 秒)

fi

}



i=0
starttime=$(date +%s)

while true ; do


i=$(expr $i + 1) ; data=$(expr $i \* $dd_size) ; unit=GB
[[ $(command -v bc) ]] && [[ $data -ge 1024 ]] && eval data=$(echo "scale=3 ; $data/1024" | bc) && unit=TB

LANG=C dd if=/dev/zero of=testfile bs=1G count=$dd_size oflag=direct > dd_result 2>&1
rm -f testfile
dd_speed=$(cat dd_result | awk -F, '{io=$NF} END { print io}' | sed 's/^[ \t]*//;s/[ \t]*$//')
dd_time=$(cat dd_result | grep --color=never -oE "[0-9]+\.[0-9][0-9]")
endtime=$(date +%s) ; timeused=$(( $endtime - $starttime )) ; time_cal

# echo -e "\n${bold}第${bailvse} $i ${normal}${bold}次循环 dd 已完成，总写入量${baihongse} ${data}${unit} ${normal}"
echo -e "\n${bold}第${bailanse} $i ${normal}${bold}次循环 dd 已完成，总写入量${baihongse} ${data}${unit} ${normal}${bold}，总耗时${baizise} ${time} ${normal}"
echo -e "${bold}本次耗时${heihuangse} $dd_time 秒 ${normal}${bold}，本次 dd 平均速度${baiqingse} ${dd_speed} ${normal}"
# echo -e "${bold}${bailanse}$(date "+%Y.%m.%d %H:%M:%S")，总耗时${baizise} ${time}${normal}\n"


done
